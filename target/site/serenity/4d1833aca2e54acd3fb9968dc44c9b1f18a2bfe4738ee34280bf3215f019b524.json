{"name":"Put update user with invalid id as string should failed then return 500 response code","id":"testing-put-todos-jsonplaceholder-api;put-update-user-with-invalid-id-as-string-should-failed-then-return-500-response-code","testSteps":[{"number":1,"description":"1: Put update user with invalid id as string should failed then return 500 response code ({id\u003d1999})","duration":677,"startTime":"2023-01-19T14:01:46.923+07:00[Asia/Bangkok]","result":"SUCCESS","precondition":false,"level":0,"lineNumber":89,"children":[{"number":2,"description":"Given Put update todos with invalid id \"1999\" as string","duration":6,"startTime":"2023-01-19T14:01:46.926+07:00[Asia/Bangkok]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":3,"description":"Put update todos with string","duration":1,"startTime":"2023-01-19T14:01:46.930+07:00[Asia/Bangkok]","result":"SUCCESS","precondition":false,"level":2}]},{"number":4,"description":"When Send request put update todos with invalid id as string","duration":666,"startTime":"2023-01-19T14:01:46.933+07:00[Asia/Bangkok]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":5,"description":"PUT https://jsonplaceholder.typicode.com/todos/1999\r","duration":0,"startTime":"2023-01-19T14:01:47.598+07:00[Asia/Bangkok]","result":"SUCCESS","restQuery":{"method":"PUT","path":"https://jsonplaceholder.typicode.com/todos/1999\r","content":"C:\\FikriData\\Fikri Data Penting\\Altera\\TODOS\\GroupProject-QE8-Team4\\src\\test\\resources\\JSON\\Request\\Todos\\ValidPutTodos.json\r","contentType":"application/json","requestHeaders":"Accept\u003d*/*\r\n\t\t\t\tContent-Type\u003dapplication/json; charset\u003dUTF-8\r","requestCookies":"\r","responseHeaders":"Date: Thu, 19 Jan 2023 07:01:47 GMT\r\nContent-Type: text/html; charset\u003dutf-8\r\nTransfer-Encoding: chunked\r\nConnection: keep-alive\r\nX-Powered-By: Express\r\nX-Ratelimit-Limit: 1000\r\nX-Ratelimit-Remaining: 994\r\nX-Ratelimit-Reset: 1674111764\r\nVary: Origin, Accept-Encoding\r\nAccess-Control-Allow-Credentials: true\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nExpires: -1\r\nVia: 1.1 vegur\r\nCF-Cache-Status: DYNAMIC\r\nServer-Timing: cf-q-config;dur\u003d8.0000008892966e-06\r\nReport-To: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s\u003dzLPouT1y6%2FzuJK%2Bb3VrY2sEPXP25NF9P6cqErDR9goTQpNzdNZGgjKgazVoZ7kZTGDVtG8ShfbKITflRA%2BbL9afCjSe%2BM%2FB71GK5enAeJAsti2xtcPIZuli7sXuNJT5vkjTGdZ5VwKPitP0IG6nO\"}],\"group\":\"cf-nel\",\"max_age\":604800}\r\nNEL: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}\r\nServer: cloudflare\r\nCF-RAY: 78bdb378d9a7a123-SIN\r\nalt-svc: h3\u003d\":443\"; ma\u003d86400, h3-29\u003d\":443\"; ma\u003d86400\r","responseCookies":"\r","responseBody":"\u003chtml\u003e\n  \u003cbody\u003eTypeError: Cannot read properties of undefined (reading \u0027id\u0027)\n    at update (/app/node_modules/json-server/lib/server/router/plural.js:262:24)\n    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/app/node_modules/express/lib/router/route.js:137:13)\n    at next (/app/node_modules/express/lib/router/route.js:131:14)\n    at Route.dispatch (/app/node_modules/express/lib/router/route.js:112:3)\n    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)\n    at /app/node_modules/express/lib/router/index.js:281:22\n    at param (/app/node_modules/express/lib/router/index.js:354:14)\n    at param (/app/node_modules/express/lib/router/index.js:365:14)\n    at Function.process_params (/app/node_modules/express/lib/router/index.js:410:3)\u003c/body\u003e\n\u003c/html\u003e","statusCode":500},"precondition":false,"level":2}]},{"number":6,"description":"Then Should return status code 500 Internal Server Error","duration":1,"startTime":"2023-01-19T14:01:47.599+07:00[Asia/Bangkok]","result":"SUCCESS","precondition":false,"level":1}]}],"userStory":{"id":"testing-put-todos-jsonplaceholder-api","storyName":"Testing PUT Todos JsonPlaceHolder API","path":"classpath:features/JsonPlaceHolder/Todos/PutTodos.feature","type":"feature"},"featureTag":{"name":"Todos/Testing PUT Todos JsonPlaceHolder API","type":"feature","displayName":"Todos/Testing PUT Todos JsonPlaceHolder API"},"title":"Put update user with invalid id as string should failed then return 500 response code","description":"","tags":[{"name":"GroupProject","type":"tag","displayName":"GroupProject"},{"name":"Json place holder","type":"theme","displayName":"Json place holder"},{"name":"Negative-Case","type":"tag","displayName":"Negative-Case"},{"name":"Todos/Testing PUT Todos JsonPlaceHolder API","type":"feature","displayName":"Testing PUT Todos JsonPlaceHolder API"},{"name":"Json place holder/Todos","type":"capability","displayName":"Todos"}],"startTime":"2023-01-19T14:01:46.917+07:00[Asia/Bangkok]","duration":684,"projectKey":"","isManualTestingUpToDate":false,"dataTable":{"headers":["id"],"rows":[{"values":["1999"],"lineNumber":89,"result":"SUCCESS"}],"predefinedRows":true,"scenarioOutline":"Given Put update todos with invalid id \"\u003cid\u003e\" as string\n\rWhen Send request put update todos with invalid id as string\n\rThen Should return status code 500 Internal Server Error\n\r","dataSetDescriptors":[{"startRow":0,"rowCount":0,"name":"","description":""}]},"manual":false,"testSource":"Cucumber","result":"SUCCESS","scenarioOutline":"Given Put update todos with invalid id \"\u003cid\u003e\" as string\r\nWhen Send request put update todos with invalid id as string\r\nThen Should return status code 500 Internal Server Error"}