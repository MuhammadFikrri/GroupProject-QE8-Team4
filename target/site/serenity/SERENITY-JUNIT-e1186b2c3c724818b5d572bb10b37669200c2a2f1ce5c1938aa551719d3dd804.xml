<?xml version="1.0" encoding="UTF-8"?><testsuite errors="1" failures="6" name="Testing GET comments JsonPlaceHolder" skipped="0" tests="9" time="8.45" timestamp="2023-01-19 10:46:13"><testcase name="GET comments with valid parameter id"><failure message="1 expectation failed.&#10;Response body doesn't match expectation.&#10;Expected: The content to match the given JSON schema.&#10;error: instance type (object) does not match any allowed primitive type (allowed: [&quot;array&quot;])&#10;    level: &quot;error&quot;&#10;    schema: {&quot;loadingURI&quot;:&quot;#&quot;,&quot;pointer&quot;:&quot;&quot;}&#10;    instance: {&quot;pointer&quot;:&quot;&quot;}&#10;    domain: &quot;validation&quot;&#10;    keyword: &quot;type&quot;&#10;    found: &quot;object&quot;&#10;    expected: [&quot;array&quot;]&#10;&#10;  Actual: {&#10;  &quot;postId&quot;: 1,&#10;  &quot;id&quot;: 1,&#10;  &quot;name&quot;: &quot;id labore ex et quam laborum&quot;,&#10;  &quot;email&quot;: &quot;Eliseo@gardner.biz&quot;,&#10;  &quot;body&quot;: &quot;laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium&quot;&#10;}&#10;" type="java.lang.AssertionError">1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (object) does not match any allowed primitive type (allowed: ["array"])
    level: "error"
    schema: {"loadingURI":"#","pointer":""}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "object"
    expected: ["array"]

  Actual: {
  "postId": 1,
  "id": 1,
  "name": "id labore ex et quam laborum",
  "email": "Eliseo@gardner.biz",
  "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
}
</failure><system-err>1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (object) does not match any allowed primitive type (allowed: ["array"])
    level: "error"
    schema: {"loadingURI":"#","pointer":""}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "object"
    expected: ["array"]

  Actual: {
  "postId": 1,
  "id": 1,
  "name": "id labore ex et quam laborum",
  "email": "Eliseo@gardner.biz",
  "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
}
&#13;
io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)&#13;
io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:98)&#13;
io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)&#13;
io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1267)&#13;
io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)&#13;
io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)&#13;
starter.JsonPlaceHolder.Comments.GetCommentsStepDef.validateJsonSchemaListComments(GetCommentsStepDef.java:46)&#13;
✽.Validate json schema list comments(classpath:features/JsonPlaceHolder/Comments/GetComments.feature:9)&#13;
</system-err></testcase><testcase name="GET comments with invalid parameter id"><failure message="1 expectation failed.&#10;JSON path id doesn't match.&#10;Expected: abcd&#10;  Actual: null&#10;" type="java.lang.AssertionError">1 expectation failed.
JSON path id doesn't match.
Expected: abcd
  Actual: null
</failure><system-err>1 expectation failed.
JSON path id doesn't match.
Expected: abcd
  Actual: null
&#13;
io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)&#13;
io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)&#13;
io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)&#13;
io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)&#13;
io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1267)&#13;
io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)&#13;
io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)&#13;
starter.JsonPlaceHolder.Comments.GetCommentsStepDef.responseBodyPageShouldBe(GetCommentsStepDef.java:56)&#13;
✽.Response body page should be "abcd"(classpath:features/JsonPlaceHolder/Comments/GetComments.feature:20)&#13;
</system-err></testcase><testcase name="GET comments with unregistered parameter id"><failure message="1 expectation failed.&#10;JSON path id doesn't match.&#10;Expected: &lt;501&gt;&#10;  Actual: null&#10;" type="java.lang.AssertionError">1 expectation failed.
JSON path id doesn't match.
Expected: &lt;501&gt;
  Actual: null
</failure><system-err>1 expectation failed.
JSON path id doesn't match.
Expected: &lt;501&gt;
  Actual: null
&#13;
io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)&#13;
io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)&#13;
io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)&#13;
io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)&#13;
io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1267)&#13;
io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)&#13;
io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)&#13;
starter.JsonPlaceHolder.Comments.GetCommentsStepDef.responseBodyPageShouldBeId(GetCommentsStepDef.java:40)&#13;
✽.Response body page should be 501(classpath:features/JsonPlaceHolder/Comments/GetComments.feature:32)&#13;
</system-err></testcase><testcase name="GET comments without parameter"><error type="net.serenitybdd.core.exceptions.UnrecognisedException"/><system-err>null&#13;
com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2337)&#13;
com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:710)&#13;
com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:635)&#13;
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:1952)&#13;
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:781)&#13;
com.fasterxml.jackson.databind.MappingIterator.hasNextValue(MappingIterator.java:243)&#13;
com.github.fge.jackson.JsonNodeReader.readNode(JsonNodeReader.java:149)&#13;
com.github.fge.jackson.JsonNodeReader.fromReader(JsonNodeReader.java:129)&#13;
com.github.fge.jackson.JsonLoader.fromReader(JsonLoader.java:186)&#13;
com.github.fge.jackson.JsonLoader.fromString(JsonLoader.java:199)&#13;
io.restassured.module.jsv.JsonSchemaValidator.matchesSafely(JsonSchemaValidator.java:214)&#13;
io.restassured.module.jsv.JsonSchemaValidator.matchesSafely(JsonSchemaValidator.java:75)&#13;
io.restassured.assertion.BodyMatcher.validate(BodyMatcher.groovy:76)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)&#13;
groovy.lang.Closure.call(Closure.java:412)&#13;
groovy.lang.Closure.call(Closure.java:428)&#13;
io.restassured.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.groovy:47)&#13;
io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)&#13;
io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:98)&#13;
io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)&#13;
io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1267)&#13;
io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)&#13;
io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)&#13;
starter.JsonPlaceHolder.Comments.GetCommentsStepDef.validateJsonSchemaListComments(GetCommentsStepDef.java:46)&#13;
io.cucumber.java.Invoker.doInvoke(Invoker.java:66)&#13;
io.cucumber.java.Invoker.invoke(Invoker.java:24)&#13;
io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)&#13;
io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)&#13;
io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)&#13;
io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)&#13;
io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)&#13;
io.cucumber.core.runner.TestStep.run(TestStep.java:64)&#13;
io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)&#13;
io.cucumber.core.runner.TestCase.run(TestCase.java:104)&#13;
io.cucumber.core.runner.Runner.runPickle(Runner.java:73)&#13;
io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:135)&#13;
io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:27)&#13;
io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:258)&#13;
io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:57)&#13;
</system-err></testcase><testcase name="GET comments with invalid parameter"/></testsuite>